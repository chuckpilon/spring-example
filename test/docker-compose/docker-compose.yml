version: '3.7'

services:

  # ldap:
  #   image: osixia/openldap:1.3.0
  #   container_name: ldap
  #   restart: always
  #   ports:
  #     - 389:389
  #     - 636:636 
  #   environment: 
  #     LDAP_ORGANISATION: "Pilon Consulting"
  #     LDAP_DOMAIN: "pilonconsulting.com"
  #     LDAP_BASE_DN: "dc=pilonconsulting,dc=com"
  #     LDAP_ADMIN_PASSWORD: "JonSn0w"
  #   entrypoint:
  #     - /container/tool/run
  #     - --copy-service
  #     - --loglevel 
  #     - debug
  #   volumes:
  #     - ./ldap/ldif/pilonconsulting.ldif:/container/service/slapd/assets/config/bootstrap/ldif/custom/50-bootstrap.ldif

  # keycloak:
  #   image: jboss/keycloak
  #   container_name: keycloak
  #   restart: always
  #   ports:
  #     - 9990:8080
  #     - 9991:8443
  #   environment:
  #     KEYCLOAK_USER: admin
  #     KEYCLOAK_PASSWORD: JonSn0w
  #     KEYCLOAK_IMPORT: /tmp/import/pilonapps_realm.json
  #   volumes:
  #     - ./keycloak/import:/tmp/import
  #   networks:
  #     - keycloak-network

  activemq:
    # docker run -p 61616:61616 -p 8161:8161 rmohr/activemq:5.15.9
    image: rmohr/activemq:5.15.9
    container_name: activemq
    restart: always
    ports:
      - 61616:61616 
      - 8161:8161

  postgres:
    image: spring-example-db:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432

  discovery:
    image: spring-example-discovery:latest
    container_name: discovery
    ports:
      - 8761:8761
    environment:
      OPTS: --eureka.client.registerWithEureka=true --eureka.client.fetchRegistry=true
        --eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

  item: 
    image: spring-example-item:latest
    container_name: item
    ports:
      - 8081:8081
      - 5001:5001
    environment:
      JAVAOPTS: -agentlib:jdwp=transport=dt_socket,server=y,address=5001,suspend=n
      # When more than one OAuth2 is configured, Postman doesn't work well because Spring Security
      # detects multiple providers and chooses to use a login page intead of using the token.
      # Only use multiple OAuth2 providers if needed.
      OPTS: --spring.datasource.url=jdbc:postgresql://postgres:5432/postgres 
        --eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka/
        --spring.jpa.show-sql=true
        --spring.jpa.properties.hibernate.format_sql=true
        --jms.host=activemq
        --jms.port=61616
        # --ldap.context.url=ldap://ldap:389/dc=pilonconsulting,dc=com
        # --spring.security.oauth2.client.registration.github.client-id=72e54db56754432ad227
        # --spring.security.oauth2.client.registration.github.client-secret=0dcc271fdca3ce79cc2830d84c27c0a43f37356f
        # --spring.security.oauth2.client.registration.google.client-id=1015431948737-7pjdujn29i4vvnespc7s012f8r4shr9t.apps.googleusercontent.com
        # --spring.security.oauth2.client.registration.google.client-secret=nAp42QeKc2JAHIXToPrkr6_Q
        # --spring.security.oauth2.client.registration.keycloak.provider=keycloak
        # --spring.security.oauth2.client.registration.keycloak.client-name=Keycloak
        # --spring.security.oauth2.client.registration.keycloak.client-id=spring-security
        # --spring.security.oauth2.client.registration.keycloak.client-secret=0f99e4c7-dbdd-47cb-8c52-85ac35474748
        # --spring.security.oauth2.client.provider.keycloak.issuer-uri=http://idp:9990/auth/realms/pilonapps


# networks:
#   keycloak-network:
#     driver: bridge        
